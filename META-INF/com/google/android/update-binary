#!/sbin/sh

#-----------------------------------------------------------------------
# Назначение: Переразметка раздела boot с бэкапом GPT через ZIP в Recovery
# Версия: 1.3
# Автор: isus203
# Дата создания: 29.07.2024г
# Дата обновление: 02.10.2025г
#-----------------------------------------------------------------------


# Аргументы update-binary
OUTFD="/proc/self/fd/$2"
ZIPFILE="$3"

# Пути к устройству и временным файлам
DEVICE="/dev/block/mmcblk0"
SGDISK="/tmp/sgdisk"
BOOT_IMG="/tmp/boot.img"
PRELOADER_BIN="/tmp/preloader_kh7n_h6919.bin"
LOGFILE="/tmp/repartition.log"
GPT_SDCARD="/sdcard/gpt_backup_$(date '+%Y%m%d_%H%M%S').bin"
BACKUP_ZIP="/sdcard/gpt_partition_backup_$(date '+%Y%m%d_%H%M%S').zip"
BACKUP_DIR="/tmp/backup"


# Вывод сообщений в Recovery UI + лог
ui_print() {
    echo -e "ui_print $1\nui_print" >> "$OUTFD"
    echo "$(date '+%Y-%m-%d %H:%M:%S') $1" >> "$LOGFILE"
}

# Баннер
display_banner() {
    ui_print ""
    ui_print "=========================================="
    ui_print "     Repartition Boot + GPT Backup installer"
    ui_print "                By isus203 (v1.3)              "
    ui_print "=========================================="
    ui_print ""
}

# Распаковка ZIP в /tmp
extract_package() {
    ui_print "Unpacking the archive..."
    mkdir -p /tmp
    unzip -o "$ZIPFILE" -d /tmp >> "$LOGFILE" 2>&1
    if [ $? -ne 0 ]; then
        ui_print "Unpacking error!"
        exit 1
    fi
}

# Проверка наличия необходимых файлов
check_files() {
    for f in "$SGDISK" "$BOOT_IMG" "$PRELOADER_BIN"; do
        if [ ! -f "$f" ]; then
            ui_print "File not found: $f"
            exit 1
        fi
    done
}

# Права
set_permissions() {
    ui_print "Issuance of rights..."
    chmod 755 "$SGDISK"
    chmod 644 "$BOOT_IMG" "$PRELOADER_BIN"
}

# Бэкап GPT
backup_gpt() {
    ui_print "Creating a backup GPT..."
    "$SGDISK" -b "$BACKUP_DIR" "$DEVICE"
    if [ $? -ne 0 ]; then
        ui_print "Backup error GPT!"
        exit 1
    fi
    
    # Копируем Sgdisk/backup GPT
    cp "$SGDISK" "$BACKUP_DIR" 2>/dev/null
    dd if=/dev/block/by-name/boot_a of="$BACKUP_DIR/boot_a.img" bs=4M >> "$LOGFILE" 2>&1
    if [ $? -eq 0 ]; then
        ui_print "GPT backup saved: $BACKUP_DIR"
    else
        ui_print "Failed to save backup to $BACKUP_DIR"
    fi
    
    # Копируем на SD-карту
    cp "$BACKUP_DIR" "$GPT_SDCARD" 2>/dev/null
    if [ $? -eq 0 ]; then
        ui_print "GPT backup saved: $GPT_SDCARD"
    else
        ui_print "Failed to save backup to SD card, but it is in /tmp"
    fi
     
# Скрипт восстановления
mkdir -p "$BACKUP_DIR/META-INF/com/google/android"
cat > "$BACKUP_DIR/META-INF/com/google/android/update-binary" << 'EOF'
#!/sbin/sh
OUTFD="/proc/self/fd/$2"
DEVICE="/dev/block/mmcblk0"
SGDISK="/tmp/sgdisk"
BOOT_IMG="/tmp/boot_a.img"

ui_print() {
    echo -e "ui_print $1\nui_print" >> "$OUTFD"
}

ui_print ""
ui_print "=========================================="
ui_print "         GPT Backup installer      "
ui_print "              By isus203                "
ui_print "=========================================="
ui_print ""

ui_print "GPT and partition recovery..."
mkdir -p /tmp
unzip -o "$3" -d /tmp

ui_print "Issuance of rights..."
chmod 755 "$SGDISK"
chmod 644 "$BOOT_IMG"

"$SGDISK" -l /tmp/gpt_backup.bin "$DEVICE"
dd if=/tmp/boot_a.img of=/dev/block/by-name/boot_a bs=4M
dd if=/tmp/boot_a.img of=/dev/block/by-name/boot_b bs=4M
ui_print "Recovery complete"
exit 0
EOF
    chmod +x "$BACKUP_DIR/META-INF/com/google/android/update-binary"

cat > "$BACKUP_DIR/META-INF/com/google/android/update-script" << 'EOF'
# Dummy file; update-binary is a shell script.
EOF

chmod +x "$BACKUP_DIR/META-INF/com/google/android/update-script"

    # Архивация
    ui_print "Backup archiving..."
    (cd "$BACKUP_DIR" && zip -r "$BACKUP_ZIP" .) >> "$LOGFILE" 2>&1
    ui_print "The backup has been saved.: $BACKUP_ZIP"
}

# Переразметка boot
repartition_boot() {
    ui_print "Re-marking boot..."
    "$SGDISK" "$DEVICE" -d 30 -d 31 -n 30:1003520:1200127 -c 30:boot_a -t 30:0700
    if [ $? -ne 0 ]; then exit 1; fi
    "$SGDISK" "$DEVICE" -d 43 -d 44 -n 43:1708032:1904639 -c 43:boot_b -t 43:0700
    if [ $? -ne 0 ]; then exit 1; fi
    "$SGDISK" "$DEVICE" -s
    if [ $? -ne 0 ]; then exit 1; fi
    ui_print "Re-marking is complete."
}

# Прошивка preloader и boot
flash_firmware() {
    ui_print "Firmware preloader..."
    dd if="$PRELOADER_BIN" of="/dev/block/by-name/preloader_a" bs=4M >> "$LOGFILE" 2>&1
    if [ $? -ne 0 ]; then exit 1; fi
    dd if="$PRELOADER_BIN" of="/dev/block/by-name/preloader_b" bs=4M >> "$LOGFILE" 2>&1
    if [ $? -ne 0 ]; then exit 1; fi

    ui_print "Firmware boot..."
    dd if="$BOOT_IMG" of="/dev/block/by-name/boot_a" bs=4M >> "$LOGFILE" 2>&1
    if [ $? -ne 0 ]; then exit 1; fi
    dd if="$BOOT_IMG" of="/dev/block/by-name/boot_b" bs=4M >> "$LOGFILE" 2>&1
    if [ $? -ne 0 ]; then exit 1; fi

    ui_print "The firmware is complete."
}

# Запуск
ui_print ""
display_banner
extract_package
check_files
set_permissions
backup_gpt
repartition_boot
flash_firmware

ui_print "The operation was completed successfully."
